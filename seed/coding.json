{
  "metadata": {
    "version": "1.0.0",
    "lastUpdated": "2024-01-01T00:00:00Z",
    "totalConcepts": 300,
    "sources": ["MDN Web Docs", "Stack Overflow", "GitHub", "Programming Books"]
  },
  "concepts": [
    {
      "id": "javascript_functions",
      "language": "JavaScript",
      "concept": "Functions",
      "description": "Functions are reusable blocks of code that perform specific tasks. They can accept parameters and return values.",
      "examples": [
        {
          "title": "Basic Function",
          "code": "function greet(name) {\n  return `Hello, ${name}!`;\n}\n\nconsole.log(greet('World'));",
          "explanation": "This function takes a name parameter and returns a greeting string.",
          "output": "Hello, World!"
        },
        {
          "title": "Arrow Function",
          "code": "const add = (a, b) => a + b;\n\nconsole.log(add(5, 3));",
          "explanation": "Arrow functions provide a shorter syntax for writing functions.",
          "output": "8"
        }
      ],
      "bestPractices": [
        "Use descriptive function names",
        "Keep functions small and focused",
        "Use arrow functions for simple operations",
        "Always return a value when expected"
      ],
      "commonMistakes": ["Forgetting to return a value", "Not handling edge cases", "Making functions too complex"]
    },
    {
      "id": "python_loops",
      "language": "Python",
      "concept": "Loops",
      "description": "Loops allow you to execute code repeatedly. Python has for loops and while loops.",
      "examples": [
        {
          "title": "For Loop",
          "code": "for i in range(5):\n    print(f\"Count: {i}\")",
          "explanation": "This loop prints numbers from 0 to 4.",
          "output": "Count: 0\nCount: 1\nCount: 2\nCount: 3\nCount: 4"
        },
        {
          "title": "While Loop",
          "code": "count = 0\nwhile count < 3:\n    print(f\"Count: {count}\")\n    count += 1",
          "explanation": "This while loop continues until count reaches 3.",
          "output": "Count: 0\nCount: 1\nCount: 2"
        }
      ],
      "bestPractices": [
        "Always ensure loop termination conditions",
        "Use for loops for known iterations",
        "Use while loops for conditional iterations",
        "Avoid infinite loops"
      ],
      "commonMistakes": ["Creating infinite loops", "Not updating loop variables", "Off-by-one errors"]
    }
  ]
}
